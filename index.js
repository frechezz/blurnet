require("dotenv").config();
const { Bot, Keyboard, InlineKeyboard, session, InputFile } = require("grammy");

const TOKEN = process.env.BOT_API_KEY;
const ADMIN_ID = process.env.ADMIN_ID;

const bot = new Bot(TOKEN);

const path = require("path");
const fs = require("fs");

const PHOTO_IDS = {
  tariffs:
    "AgACAgIAAxkDAAICEWfeCraGseqSYZrdjWx6mUD8_sPyAAKt9DEbwXvxSoLOVNdTQS9tAQADAgADdwADNgQ",
  instruction:
    "AgACAgIAAxkDAAICF2feC17utd9-9ZquwevZ0W6pONKJAAKu9DEbwXvxSjFEIHTDHUfuAQADAgADdwADNgQ",
  payment_success:
    "AgACAgIAAxkDAAICLGfeDHODThJjEWeqctEUFi1w8jdRAAK69DEbwXvxSnaqC35K35g9AQADAgADdwADNgQ",
  payment_rejected:
    "AgACAgIAAxkDAAICOGfeDVAfUdOpND91IASEhbhk8O0MAAK79DEbwXvxStmA5u7y4lNIAQADAgADdwADNgQ",
  waiting:
    "AgACAgIAAxkDAAICImfeDCmVVBheaxXOx_JgvfE2s6nYAAKy9DEbwXvxSskNJ49btPkKAQADAgADdwADNgQ",
};

bot.use(
  session({
    initial: () => ({ tariff: null }),
  }),
);

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
function getMainKeyboard() {
  return new Keyboard()
    .row("üü£–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüü£")
    .row("üîµ–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å blurnetüîµ")
    .placeholder("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ")
    .resized();
}

function getTariffsInlineKeyboard() {
  return (
    new InlineKeyboard()
      .row()
      .text("ü•á–ì–æ–¥", "tariff_year")
      // .row()
      .text("ü•à–ü–æ–ª–≥–æ–¥–∞", "tariff_halfyear")
      // .row()
      .text("ü•â–ú–µ—Å—è—Ü", "tariff_month")
      .row()
      .text("‚≠ê–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥", "tariff_trial")
      .row()
      .text("üî¥–ù–∞–∑–∞–¥üî¥", "back_main")
  );
}

function getPaymentInlineKeyboard() {
  return new InlineKeyboard()
    .row()
    .text("–î–∞, —É—Å–ø–µ—à–Ω–æ‚úî", "payment_success")
    .text("–ù–µ—Ç/–ù–∞–∑–∞–¥‚ùå", "payment_cancel");
}

function getReturnTariffInlineKeyboard() {
  return new InlineKeyboard()
    .row()
    .text("üî¥–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–∞—Ä–∏—Ñ–Ω—ã–º –ø–ª–∞–Ω–∞–ºüî¥", "back_tariffs");
}

function getAdminInlineKeyboard(userId, tariff) {
  return new InlineKeyboard()
    .row()
    .text("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", `approve_${userId}_${encodeURIComponent(tariff)}`)
    .text("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", `reject_${userId}_${encodeURIComponent(tariff)}`);
}

const TARIFFS = {
  tariff_year: {
    name: "ü•á–ì–æ–¥",
    price: "1000‚ÇΩ",
    message: `–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ 1000‚ÇΩ.\n
üí≥–†–µ–∫–≤–∏–∑–∏—Ç—ã: -------\n

–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ?`,
  },
  tariff_halfyear: {
    name: "ü•à–ü–æ–ª–≥–æ–¥–∞",
    price: "550‚ÇΩ",
    message: `–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ 550‚ÇΩ.\n
üí≥–†–µ–∫–≤–∏–∑–∏—Ç—ã: -------\n

–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ?`,
  },
  tariff_month: {
    name: "ü•â–ú–µ—Å—è—Ü",
    price: "100‚ÇΩ",
    message: `–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ 100‚ÇΩ.\n
üí≥–†–µ–∫–≤–∏–∑–∏—Ç—ã: -------\n

–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ?`,
  },
  tariff_trial: {
    name: "‚≠ê–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥",
    price: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    message:
      "–í–∞—à –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!",
  },
};

// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
async function handleApproval(ctx, userId, tariff) {
  const originalCaption = ctx.callbackQuery.message.caption;
  const newCaption = `${originalCaption}\n\n‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${new Date().toLocaleString()}`;

  await bot.api.sendPhoto(userId, PHOTO_IDS.payment_success, {
    caption:
      "‚úÖ–í–∞—à –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!\n" +
      "üíå–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏!\n\n" +
      "–ö–û–ù–§–ò–ì",
    reply_markup: getMainKeyboard(),
  });

  if (ctx.callbackQuery.message.photo || ctx.callbackQuery.message.document) {
    await bot.api.editMessageCaption(
      ADMIN_ID,
      ctx.callbackQuery.message.message_id,
      {
        caption: newCaption,
        reply_markup: { inline_keyboard: [] },
      },
    );
  }
}

async function handleRejection(ctx, userId, tariff) {
  const originalCaption = ctx.callbackQuery.message.caption;
  const newCaption = `${originalCaption}\n\n‚ùå –û–¢–ö–õ–û–ù–ï–ù–û\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${new Date().toLocaleString()}`;

  await bot.api.sendPhoto(userId, PHOTO_IDS.payment_rejected, {
    caption:
      `‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n–í–∞—à –ø–ª–∞—Ç–µ–∂ –∑–∞ —Ç–∞—Ä–∏—Ñ '${tariff}' –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n` +
      `–ü—Ä–∏—á–∏–Ω–∞: –û—à–∏–±–∫–∞ –≤ –æ–ø–ª–∞—Ç–µ\n` +
      `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞:\n` +
      `1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤\n` +
      `2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—É–º–º—ã\n` +
      `3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å–Ω–æ–≤–∞\n\n` +
      `–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`,
    reply_markup: getMainKeyboard(),
  });

  await bot.api.sendMessage(
    userId,
    "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω!\n\n" +
      "ü•á–ì–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 1000‚ÇΩ.\n" +
      "ü•à–ü–æ–ª–≥–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 550‚ÇΩ.\n" +
      "ü•â–ú–µ—Å—è—Ü –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 100‚ÇΩ.\n\n" +
      "‚≠ê–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è.",
    { reply_markup: getTariffsInlineKeyboard() },
  );

  if (ctx.callbackQuery.message.photo || ctx.callbackQuery.message.document) {
    await bot.api.editMessageCaption(
      ADMIN_ID,
      ctx.callbackQuery.message.message_id,
      {
        caption: newCaption,
        reply_markup: { inline_keyboard: [] },
      },
    );
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫ (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
bot.command("start", async (ctx) => {
  await ctx.reply(
    "–¢—ã –∑–∞–ø—É—Å—Ç–∏–ª blurnetüîÑ\n\n" +
      "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ –≤–ø–µ—Ä–µ–¥!",
    { reply_markup: getMainKeyboard() },
  );
});

// bot.command("upload_photos", async (ctx) => {
//   const photos = [
//     "tariffs.jpg",
//     "instruction.jpg",
//     "payment_success.jpg",
//     "payment_rejected.jpg",
//     "waiting.jpg",
//   ];

//   for (const photo of photos) {
//     const photoPath = path.join(__dirname, "images", photo);
//     const { photo: photoArray } = await ctx.replyWithPhoto(
//       new InputFile(photoPath),
//     );
//     const fileId = photoArray[photoArray.length - 1].file_id; // –ë–µ—Ä–µ–º ID —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
//     console.log(`${photo}: ${fileId}`);
//   }

//   await ctx.reply("File ID –≤—Å–µ—Ö —Ñ–æ—Ç–æ –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å.");
// });

bot.hears("üü£–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüü£", async (ctx) => {
  await ctx.replyWithPhoto(PHOTO_IDS.instruction, {
    caption:
      "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n" +
      "1. –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏—à–∏.üïπÔ∏è\n" +
      "2. –°–ª–µ–¥—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–∏—è–º –±–æ—Ç–∞.üëå\n" +
      "3. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –¥–µ–Ω–µ–∂–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å --> @blurnet_support.üí∏\n" +
      "4. –í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ blurnet --> @blurnet_news.üì¢",
    reply_markup: getMainKeyboard(),
  });
});

bot.hears("üîµ–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å blurnetüîµ", async (ctx) => {
  await ctx.replyWithPhoto(PHOTO_IDS.tariffs, {
    caption:
      "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω!\n\n" +
      "ü•á–ì–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 1000‚ÇΩ.\n" +
      "ü•à–ü–æ–ª–≥–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 550‚ÇΩ.\n" +
      "ü•â–ú–µ—Å—è—Ü –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 100‚ÇΩ.\n\n" +
      "‚≠ê–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è.",
    reply_markup: getTariffsInlineKeyboard(),
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query
bot.on("callback_query", async (ctx) => {
  const callbackData = ctx.callbackQuery.data;
  const userId = ctx.from.id;

  console.log(`–ü–æ–ª—É—á–µ–Ω callback_query: ${callbackData}, –æ—Ç userId: ${userId}`);

  try {
    if (callbackData.startsWith("tariff_")) {
      const tariffKey = callbackData;
      console.log(`–í—ã–±—Ä–∞–Ω —Ç–∞—Ä–∏—Ñ: ${tariffKey}`);

      const tariff = TARIFFS[tariffKey];
      if (!tariff) {
        throw new Error(`–¢–∞—Ä–∏—Ñ ${tariffKey} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ TARIFFS`);
      }

      ctx.session.tariff = tariff.name;
      console.log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω —Ç–∞—Ä–∏—Ñ –≤ —Å–µ—Å—Å–∏–∏: ${ctx.session.tariff}`);

      if (tariffKey === "tariff_trial") {
        await ctx.reply(
          "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞!\n" +
            "–í–∞—à VPN –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç.",
          { reply_markup: getReturnTariffInlineKeyboard() },
        );

        await bot.api.sendMessage(
          ADMIN_ID,
          `–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥!\n` +
            `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.from.username ? "@" + ctx.from.username : "–Ω–µ —É–∫–∞–∑–∞–Ω"}\n` +
            `ID: ${userId}`,
        );
      } else {
        await ctx.reply(tariff.message, {
          reply_markup: getPaymentInlineKeyboard(),
        });
      }

      await ctx.answerCallbackQuery();
    } else if (callbackData === "back_main") {
      await ctx.deleteMessage();
      await ctx.reply("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", {
        reply_markup: getMainKeyboard(),
      });
      await ctx.answerCallbackQuery();
    } else if (callbackData === "back_tariffs") {
      await ctx.replyWithPhoto(PHOTO_IDS.tariffs, {
        caption:
          "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω!\n\n" +
          "ü•á–ì–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 1000‚ÇΩ.\n" +
          "ü•à–ü–æ–ª–≥–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 550‚ÇΩ.\n" +
          "ü•â–ú–µ—Å—è—Ü –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 100‚ÇΩ.\n\n" +
          "‚≠ê–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è.",
        reply_markup: getTariffsInlineKeyboard(),
      });
      await ctx.answerCallbackQuery();
    } else if (callbackData === "payment_success") {
      await ctx.reply("–ü—Ä–∏—à–ª–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –æ–± –æ–ø–ª–∞—Ç–µ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞.üìú");
      await ctx.answerCallbackQuery();
    } else if (callbackData === "payment_cancel") {
      await ctx.replyWithPhoto(PHOTO_IDS.tariffs, {
        caption:
          "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω!\n\n" +
          "ü•á–ì–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 1000‚ÇΩ.\n" +
          "ü•à–ü–æ–ª–≥–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 550‚ÇΩ.\n" +
          "ü•â–ú–µ—Å—è—Ü –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 100‚ÇΩ.\n\n" +
          "‚≠ê–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è.",
        reply_markup: getTariffsInlineKeyboard(),
      });
      await ctx.answerCallbackQuery();
    } else if (
      callbackData.startsWith("approve_") ||
      callbackData.startsWith("reject_")
    ) {
      if (userId !== Number(ADMIN_ID)) {
        throw new Error("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è");
      }

      const [action, targetUserId, encodedTariff] = callbackData.split("_");
      const tariff = decodeURIComponent(encodedTariff);

      if (action === "approve") {
        await handleApproval(ctx, Number(targetUserId), tariff);
        await ctx.answerCallbackQuery({ text: "–ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω" });
      } else if (action === "reject") {
        await handleRejection(ctx, Number(targetUserId), tariff);
        await ctx.answerCallbackQuery({ text: "–ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω" });
      }
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback_query:", error);
    await ctx.answerCallbackQuery({
      text: `–û—à–∏–±–∫–∞: ${error.message}`,
      show_alert: true,
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
bot.on(["message:photo", "message:document"], async (ctx) => {
  const userId = ctx.from.id;
  const username = ctx.from.username ? "@" + ctx.from.username : "–Ω–µ —É–∫–∞–∑–∞–Ω";
  const selectedTariff = ctx.session.tariff || "–¢–∞—Ä–∏—Ñ –Ω–µ —É–∫–∞–∑–∞–Ω";

  await ctx.replyWithPhoto(PHOTO_IDS.waiting, {
    caption:
      "–°–ø–∞—Å–∏–±–æ! –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–π–º–µ—Ç –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è.‚è≥\n\n" + "–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.üîî",
    reply_markup: getReturnTariffInlineKeyboard(),
  });

  const caption = `–ù–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username}\nID: ${userId}\n–¢–∞—Ä–∏—Ñ: ${selectedTariff}`;

  try {
    if (ctx.message.photo) {
      const photoId = ctx.message.photo[ctx.message.photo.length - 1].file_id;
      await bot.api.sendPhoto(ADMIN_ID, photoId, {
        caption: caption,
        reply_markup: getAdminInlineKeyboard(userId, selectedTariff),
      });
    } else if (ctx.message.document) {
      await bot.api.sendDocument(ADMIN_ID, ctx.message.document.file_id, {
        caption: caption,
        reply_markup: getAdminInlineKeyboard(userId, selectedTariff),
      });
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:", error);
  }
});

bot.catch((err) => {
  console.error("–û—à–∏–±–∫–∞ –±–æ—Ç–∞:", err);
});

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");
bot.start();
