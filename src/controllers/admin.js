const { ADMIN_ID } = require("../config");
const api = require("../services/api"); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à API —Å–µ—Ä–≤–∏—Å

/**
 * Handles payment approval by admin
 */
async function handleApproval(ctx, bot, userId, tariff) {
  console.log("handleApproval called with parameters:");
  console.log("userId:", userId);
  console.log("tariff:", tariff);

  try {
    const originalCaption = ctx.callbackQuery.message.caption;
    const newCaption = `${originalCaption}\n\n‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${new Date().toLocaleString()}`;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π —Ç–∞—Ä–∏—Ñ
    if (!tariff) {
      console.error("ERROR: tariff is undefined in handleApproval!");
      tariff = "ü•â1 –º–µ—Å—è—Ü"; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ
      console.log("Using default tariff:", tariff);
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const username = `tg_${userId}_${Math.floor(Math.random() * 1000)}`;
    console.log("Generated username:", username);

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ —á–µ—Ä–µ–∑ API
    let subscriptionUrl = require("../config").SUBSCRIPTION_URL; // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π URL –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º —Å API

    try {
      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∞—Ä–∏—Ñ–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
      console.log("Calling API createUser with tariff:", tariff);
      const userResponse = await api.createUser(username, userId, tariff);
      console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:", userResponse.uuid);

      // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (userResponse.subscriptionUrl) {
        subscriptionUrl = userResponse.subscriptionUrl;
      }
    } catch (apiError) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ API:", apiError);
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ API –≤–µ—Ä–Ω—É–ª–æ –æ—à–∏–±–∫—É
    }

    await bot.api.sendPhoto(
      userId,
      require("../constants/media").PHOTO_IDS.payment_success,
      {
        caption:
          "<b>–ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</b>‚úîÔ∏è\n\n" +
          "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é\n\n" +
          `üëÄ <a href='${subscriptionUrl}'>–ü–æ–¥–ø–∏—Å–∫–∞</a>`,
        parse_mode: "HTML",
        reply_markup: require("../keyboards").getMainKeyboard(),
      },
    );

    if (ctx.callbackQuery.message.photo || ctx.callbackQuery.message.document) {
      await bot.api.editMessageCaption(
        ADMIN_ID,
        ctx.callbackQuery.message.message_id,
        {
          caption: newCaption,
          reply_markup: { inline_keyboard: [] },
        },
      );
    }
  } catch (error) {
    console.error("Error in handleApproval:", error);
  }
}

/**
 * Handles payment rejection by admin
 */
async function handleRejection(ctx, bot, userId, tariff) {
  console.log("handleRejection called with parameters:");
  console.log("userId:", userId);
  console.log("tariff:", tariff);

  try {
    const originalCaption = ctx.callbackQuery.message.caption;
    const newCaption = `${originalCaption}\n\n‚ùå –û–¢–ö–õ–û–ù–ï–ù–û\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${new Date().toLocaleString()}`;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π —Ç–∞—Ä–∏—Ñ
    if (!tariff || tariff.trim() === "") {
      // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–∞—Ä–∏—Ñ –∏–∑ –ø–æ–¥–ø–∏—Å–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
      const captionMatch = originalCaption.match(/–¢–∞—Ä–∏—Ñ: (.*?)(?:\n|$)/);
      if (captionMatch && captionMatch[1]) {
        tariff = captionMatch[1].trim();
        console.log("–ò–∑–≤–ª–µ—á–µ–Ω —Ç–∞—Ä–∏—Ñ –∏–∑ –ø–æ–¥–ø–∏—Å–∏:", tariff);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞—Ä–∏—Ñ –µ—â–µ —Ä–∞–∑ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!tariff || tariff.trim() === "") {
      console.error("–¢–∞—Ä–∏—Ñ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫");
      tariff = "ü•â1 –º–µ—Å—è—Ü"; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞—Ä–∏—Ñ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }

    await bot.api.sendPhoto(
      userId,
      require("../constants/media").PHOTO_IDS.payment_rejected,
      {
        caption:
          "<b>–£–í–ï–î–û–ú–õ–ï–ù–ò–ï\n</b>" +
          "‚ùóÔ∏è <b>–û—à–∏–±–∫–∞ –≤ –æ–ø–ª–∞—Ç–µ</b> ‚ùóÔ∏è\n\n" +
          `–í–∞—à –ø–ª–∞—Ç–µ–∂ –∑–∞ —Ç–∞—Ä–∏—Ñ ¬´${tariff}¬ª –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n\n` +
          "<u>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</u>\n" +
          "1. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤\n" +
          "2. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—É–º–º—ã\n\n" +
          "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —Å–Ω–æ–≤–∞.\n\n" +
          "–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É(@blurnet_support)",
        parse_mode: "HTML",
        reply_markup: require("../keyboards").getMainKeyboard(),
      },
    );

    // Show tariffs again
    await bot.api.sendMessage(
      userId,
      "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:\n" +
        "üèÜ12 –º–µ—Å—è—Ü–µ–≤ - <b>–¶–µ–Ω–∞: 1000 ‚ÇΩ</b>\n" +
        "ü•á6 –º–µ—Å—è—Ü–µ–≤ - <b>–¶–µ–Ω–∞: 550 ‚ÇΩ</b>\n" +
        "ü•à3 –º–µ—Å—è—Ü–∞ - <b>–¶–µ–Ω–∞: 280 ‚ÇΩ</b>\n" +
        "ü•â1 –º–µ—Å—è—Ü - <b>–¶–µ–Ω–∞: 100 ‚ÇΩ</b>\n\n" +
        "üåü –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ <b>5 –¥–Ω–µ–π</b>",
      {
        parse_mode: "HTML",
        reply_markup: require("../keyboards").getTariffsInlineKeyboard(),
      },
    );

    if (ctx.callbackQuery.message.photo || ctx.callbackQuery.message.document) {
      await bot.api.editMessageCaption(
        ADMIN_ID,
        ctx.callbackQuery.message.message_id,
        {
          caption: newCaption,
          reply_markup: { inline_keyboard: [] },
        },
      );
    }
  } catch (error) {
    console.error("Error in handleRejection:", error);
  }
}

module.exports = {
  handleApproval,
  handleRejection,
};
